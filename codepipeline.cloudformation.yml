AWSTemplateFormatVersion: 2010-09-09
Description: >
  Medical Peek Server CI/CD Stack

Parameters:
  AccountName:
    Description: Name of the account
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /dev/account-name

  Environment:
    Type: String
    Description: AWS Environment
    Default: dev
    AllowedValues:
      - dev
      - prod
      - stage

  GitHubOauthToken:
    Description: GitHub OAuth Token for use by CodePipeline
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: /dev/github-code-pipeline-oauth
    NoEcho: true

  GitHubBranchName:
    Description: GitHub branch to use by default
    Type: String
    Default: master

  GitHubRepoName:
    Description: GitHub Repo Name
    Type: String
    Default: medical_peek

  GitHubOwner:
    Description: GitHub Repo Owner Name
    Type: String
    Default: WillCallahan

  ApiBuildSpecPath:
    Description: Relative path to the buildspec.yml in the repo
    Type: String
    Default: medical_peek_api/buildspec.yml

  WebBuildSpecPath:
    Description: Relative path to the buildspec.yml in the repo
    Type: String
    Default: medical_peek_web/buildspec.yml

  WebCodeS3Bucket:
    Description: Web Code S3 Bucket Name
    Type: String
    Default: medical-peek-web

  CodePipelineArtifactPrefix:
    Description: Artifact name prefix to use in CodePipeline
    Type: String
    AllowedPattern: "[a-z0-9_]*"
    Default: medical_peek_codepipeline

  ApiEcrDockerImage:
    Description: ECR Container Image to push after docker image is built
    Type: String
    Default: medical-peek/api

  MySqlAwsSsmSecretName:
    Description: AWS SSM Secret Name to connect to the MySql Database
    Type: String
    Default: /dev/medical-peek/database/mysql

  MedicalPeekApiStackName:
    Description: Name of the Medical Peek Stack to Create
    Type: String
    Default: medical-peek-api

  MedicalPeekWebStackName:
    Description: Name of the Medical Peek Stack to Create
    Type: String
    Default: medical-peek-web

  BucketStackName:
    Description: Name of the S3 Stack
    Type: String
    Default: bucket-stack

  SecurityStackName:
    Description: Name of the Security Stack
    Type: String
    Default: security-stack

  LoggingStackName:
    Description: Name of the Logging Stack
    Type: String
    Default: logging-stack

  NetworkStackName:
    Description: Name of the Network Stack
    Type: String
    Default: network-stack

  NetworkSecurityStackName:
    Description: Name of the Network Security Stack
    Type: String
    Default: network-security-stack

Resources:

  MedicalPeekCodeBuildLogSteam:
    Type: AWS::Logs::LogStream
    Properties:
      LogGroupName:
        Fn::ImportValue:
          !Sub ${LoggingStackName}-CodeBuildLogGroupName
      LogStreamName: !Sub ${AWS::StackName}-stream

  MedicalPeekApiCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        ArtifactIdentifier: !Sub ${AWS::StackName}-api
        EncryptionDisabled: false
        Type: CODEPIPELINE
      Cache:
        Location: NO_CACHE
        Type: NO_CACHE
      Description: !Sub Medical Peek Api (${AWS::StackName})
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: STACK_NAME
            Value: !Sub ${AWS::StackName}
          - Name: AWS_ECR_REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ApiEcrDockerImage}
          - Name: DOCKERFILE_PATH
            Value: medical_peek_api/Dockerfile
          - Name: MP_AWS_SSM_MYSQL_SECRET
            Value: !Sub ${MySqlAwsSsmSecretName}
          - Name: BRANCH_NAME
            Value: !Ref GitHubBranchName
        Image: aws/codebuild/standard:2.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      LogsConfig:
        CloudWatchLogs:
          GroupName:
            Fn::ImportValue:
              !Sub ${LoggingStackName}-CodeBuildLogGroupName
          Status: ENABLED
          StreamName: !Ref MedicalPeekCodeBuildLogSteam
      Name: !Sub ${AWS::StackName}-api-code-build
      QueuedTimeoutInMinutes: 30
      ServiceRole:
        Fn::ImportValue:
          !Sub ${SecurityStackName}-CodeBuildRoleArn
      Source:
        BuildSpec: !Ref ApiBuildSpecPath
        GitCloneDepth: 0
        Type: CODEPIPELINE
      SourceVersion: !Sub refs/heads/${GitHubBranchName}
      Tags:
        - Key: Service
          Value: Code Build
        - Key: Provider
          Value: AWS
        - Key: Name
          Value: !Sub ${AWS::StackName}-api-code-build
      TimeoutInMinutes: 30
      VpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue:
              !Sub ${NetworkSecurityStackName}-CodeBuildSecurityGroup
        Subnets:
          - Fn::ImportValue:
              !Sub ${NetworkStackName}-PrivateSubnet1
          - Fn::ImportValue:
              !Sub ${NetworkStackName}-PrivateSubnet2
        VpcId:
          Fn::ImportValue:
            !Sub ${NetworkStackName}-Vpc

  MedicalPeekWebCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        ArtifactIdentifier: !Sub ${AWS::StackName}-web
        EncryptionDisabled: false
        Type: CODEPIPELINE
      Cache:
        Location: NO_CACHE
        Type: NO_CACHE
      Description: !Sub Medical Peek Web (${AWS::StackName})
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: STACK_NAME
            Value: !Sub ${AWS::StackName}
          - Name: BRANCH_NAME
            Value: !Ref GitHubBranchName
          - Name: MEDICAL_PEEK_API_URL
            Value: !Sub https://${Environment}-${GitHubBranchName}-medical-peek-api.${AccountName}.com
        Image: aws/codebuild/standard:4.0
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      LogsConfig:
        CloudWatchLogs:
          GroupName:
            Fn::ImportValue:
              !Sub ${LoggingStackName}-CodeBuildLogGroupName
          Status: ENABLED
          StreamName: !Ref MedicalPeekCodeBuildLogSteam
      Name: !Sub ${AWS::StackName}-web-code-build
      QueuedTimeoutInMinutes: 30
      ServiceRole:
        Fn::ImportValue:
          !Sub ${SecurityStackName}-CodeBuildRoleArn
      Source:
        BuildSpec: !Ref WebBuildSpecPath
        GitCloneDepth: 0
        Type: CODEPIPELINE
      SourceVersion: !Sub refs/heads/${GitHubBranchName}
      Tags:
        - Key: Service
          Value: Code Build
        - Key: Provider
          Value: AWS
        - Key: Name
          Value: !Sub ${AWS::StackName}-web-code-build
      TimeoutInMinutes: 30
      VpcConfig:
        SecurityGroupIds:
          - Fn::ImportValue:
              !Sub ${NetworkSecurityStackName}-CodeBuildSecurityGroup
        Subnets:
          - Fn::ImportValue:
              !Sub ${NetworkStackName}-PrivateSubnet1
          - Fn::ImportValue:
              !Sub ${NetworkStackName}-PrivateSubnet2
        VpcId:
          Fn::ImportValue:
            !Sub ${NetworkStackName}-Vpc

  MedicalPeekCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${AWS::StackName}
      RoleArn:
        Fn::ImportValue:
          !Sub ${SecurityStackName}-CodePipelineRoleArn
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              Namespace: !Sub ${CodePipelineArtifactPrefix}_source_ns
              Region: !Sub ${AWS::Region}
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: !Sub ${CodePipelineArtifactPrefix}_source
              Configuration:
                Owner: !Sub ${GitHubOwner}
                Repo: !Sub ${GitHubRepoName}
                Branch: !Sub ${GitHubBranchName}
                OAuthToken: !Ref GitHubOauthToken
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: BuildApiAction
              Namespace: !Sub ${CodePipelineArtifactPrefix}_build_api_ns
              Region: !Sub ${AWS::Region}
              InputArtifacts:
                - Name: !Sub ${CodePipelineArtifactPrefix}_source
              OutputArtifacts:
                - Name: !Sub ${CodePipelineArtifactPrefix}_build_api
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref MedicalPeekApiCodeBuild
                PrimarySource: !Sub ${CodePipelineArtifactPrefix}_source
              RunOrder: 2
            - Name: BuildWebAction
              Namespace: !Sub ${CodePipelineArtifactPrefix}_build_web_ns
              Region: !Sub ${AWS::Region}
              InputArtifacts:
                - Name: !Sub ${CodePipelineArtifactPrefix}_source
              OutputArtifacts:
                - Name: !Sub ${CodePipelineArtifactPrefix}_build_web
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref MedicalPeekWebCodeBuild
                PrimarySource: !Sub ${CodePipelineArtifactPrefix}_source
              RunOrder: 2
        - Name: Approval
          Actions:
            - Name: ApprovalAction
              Namespace: !Sub ${CodePipelineArtifactPrefix}_approval_ns
              Region: !Sub ${AWS::Region}
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: 1
                Provider: Manual
              Configuration:
                CustomData: !Sub 'Build Version: #{${CodePipelineArtifactPrefix}_build_api_ns.BUILD_VERSION}'
                ExternalEntityLink: !Sub 'https://console.${AWS::Partition}.amazon.com/ecr/repositories/${ApiEcrDockerImage}/?region=${AWS::Region}'
              RunOrder: 3
        - Name: Deploy
          Actions:
            - Name: DeployApiAction
              Namespace: !Sub ${CodePipelineArtifactPrefix}_deploy_api_ns
              Region: !Sub ${AWS::Region}
              InputArtifacts:
                - Name: !Sub ${CodePipelineArtifactPrefix}_source
                - Name: !Sub ${CodePipelineArtifactPrefix}_build_api
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                StackName: !Ref MedicalPeekApiStackName
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn:
                  Fn::ImportValue:
                    !Sub ${SecurityStackName}-CodePipelineRoleArn
                TemplatePath: !Sub ${CodePipelineArtifactPrefix}_source::medical_peek_api/cloudformation.yml
                OutputFileName: !Sub ${CodePipelineArtifactPrefix}_stack.json
                ParameterOverrides: !Sub '{"Environment":"${Environment}","BranchName":"${GitHubBranchName}"}'
                TemplateConfiguration: !Sub ${CodePipelineArtifactPrefix}_build_api::cloudformation-template-configuration.json
              RunOrder: 4
            - Name: DeployWebAction
              Namespace: !Sub ${CodePipelineArtifactPrefix}_deploy_web_ns
              Region: !Sub ${AWS::Region}
              InputArtifacts:
                - Name: !Sub ${CodePipelineArtifactPrefix}_source
                - Name: !Sub ${CodePipelineArtifactPrefix}_build_web
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: REPLACE_ON_FAILURE
                StackName: !Ref MedicalPeekWebStackName
                Capabilities: CAPABILITY_NAMED_IAM
                RoleArn:
                  Fn::ImportValue:
                    !Sub ${SecurityStackName}-CodePipelineRoleArn
                TemplatePath: !Sub ${CodePipelineArtifactPrefix}_source::medical_peek_web/cloudformation.yml
                OutputFileName: !Sub ${CodePipelineArtifactPrefix}_stack.json
                ParameterOverrides: !Sub '{"Environment":"${Environment}","BranchName":"${GitHubBranchName}"}'
                TemplateConfiguration: !Sub ${CodePipelineArtifactPrefix}_build_web::cloudformation-template-configuration.json
              RunOrder: 4
            - Name: DeployWebSourceAction
              Namespace: !Sub ${CodePipelineArtifactPrefix}_deploy_web_source_ns
              Region: !Sub ${AWS::Region}
              InputArtifacts:
                - Name: !Sub ${CodePipelineArtifactPrefix}_build_web
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: S3
              Configuration:
                BucketName: !Sub ${Environment}.${GitHubBranchName}.${WebCodeS3Bucket}.${AccountName}
                Extract: true
              RunOrder: 5
      ArtifactStore:
        Type: S3
        Location:
          Fn::ImportValue:
            !Sub ${BucketStackName}-CodePipelineBucketName

Outputs:
  MedicalPeekApiCodeBuildName:
    Value: !Ref MedicalPeekApiCodeBuild