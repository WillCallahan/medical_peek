AWSTemplateFormatVersion: 2010-09-09
Description: >
  Medical Peek ECS Stack

Parameters:
  NetworkStackName:
    Type: String
    Description: Name of the Network Stack
    Default: network-stack

  EcsClusterStackName:
    Type: String
    Description: Name of the Ecs Cluster Stack
    Default: ecs-cluster-stack

  SecurityStackName:
    Type: String
    Description: Name of the Security Stack
    Default: security-stack

  LoggingStackName:
    Description: Name of the Logging Stack
    Type: String
    Default: logging-stack

  EcrDockerImage:
    Description: ECR Container Image of the Medical Peek
    Type: String
    Default: medical-peek/api:latest

  CertificateArn:
    Description: SSL Certificate to use for the Medical Peek Api
    Type: String

Resources:

  MedicalPeekLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: 300
        - Key: access_logs.s3.enabled
          Value: false
        - Key: deletion_protection.enabled
          Value: false
      Name: !Sub ${AWS::StackName}-elb
      Scheme: internal
      SecurityGroups:
        - !Ref MedicalPeekLoabBalancerSecurityGroup
      Subnets:
        - Fn::ImportValue:
            !Sub ${NetworkStackName}-PrivateSubnet1
        - Fn::ImportValue:
            !Sub ${NetworkStackName}-PrivateSubnet2
      Tags:
        - Key: Service
          Value: Medical Peek
        - Key: Provider
          Value: Juxt
        - Key: Name
          Value: !Sub ${AWS::StackName}-elb
      Type: application

  MedicalPeekHttpsListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref MedicalPeekTargetGroup
          Type: forward
          Order: 1
      LoadBalancerArn: !Ref MedicalPeekLoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref CertificateArn
      SslPolicy: ELBSecurityPolicy-2016-08

  MedicalPeekHttpListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Host: '#{host}'
            Path: '/#{path}'
            Port: 443
            Protocol: HTTPS
            Query: '#{query}'
            StatusCode: HTTP_301
            Order: 1
      LoadBalancerArn: !Ref MedicalPeekLoadBalancer
      Port: 80
      Protocol: HTTP

  MedicalPeekTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    DependsOn: MedicalPeekLoadBalancer
    Properties:
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 20
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckPort: 80
      HealthCheckTimeoutSeconds: 15
      HealthyThresholdCount: 2
      Matcher:
        HttpCode: 200
      Name: !Sub ${AWS::StackName}-elb-tg
      TargetType: ip
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
          !Sub ${NetworkStackName}-Vpc
      Tags:
        - Key: Service
          Value: Medical Peek
        - Key: Provider
          Value: Callahan William
        - Key: Name
          Value: !Sub ${AWS::StackName}-elb-tg

  MedicalPeekService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub ${AWS::StackName}
      Cluster:
        Fn::ImportValue:
          !Sub ${EcsClusterStackName}-DatabaseClusterArn
      DeploymentConfiguration:
        MaximumPercent: 100
        MinimumHealthyPercent: 50
      DeploymentController:
        Type: ECS
      DesiredCount: 1
      LaunchType: FARGATE
      TaskDefinition: !Ref MedicalPeekTaskDefinition
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !Ref MedicalPeekHostSecurityGroup
          Subnets:
            - Fn::ImportValue:
                !Sub ${NetworkStackName}-PrivateSubnet1
            - Fn::ImportValue:
                !Sub ${NetworkStackName}-PrivateSubnet2
      LoadBalancers:
        - ContainerName: !Sub ${AWS::StackName}-ecs-cd
          ContainerPort: 80
          TargetGroupArn: !Ref MedicalPeekTargetGroup
      Tags:
        - Key: Service
          Value: Medical Peek
        - Key: Provider
          Value: Callahan William
        - Key: Name
          Value: !Sub ${AWS::StackName}-ecs-service

  MedicalPeekTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub ${AWS::StackName}-task
      Cpu: 1024
      Memory: 2GB
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ContainerDefinitions:
        - Name: !Sub ${AWS::StackName}-ecs-cd
          DisableNetworking: false
          PortMappings:
            - ContainerPort: 8000
              HostPort: 80
              Protocol: tcp
          Privileged: false
          ReadonlyRootFilesystem: false
          DockerLabels:
            Name: !Sub ${AWS::StackName}-task
          Essential: true
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${EcrDockerImage}
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                Fn::ImportValue:
                  !Sub ${LoggingStackName}-DatabaseLogGroupName
              awslogs-region: !Sub ${AWS::Region}
              awslogs-stream-prefix: !Sub ${AWS::StackName}
          Environment:
            - Name: SERVER_PORT
              Value: 80
            - Name: WORKER_THREADS
              Value: 3
      ExecutionRoleArn:
        Fn::ImportValue:
          !Sub ${SecurityStackName}-FargateReadonlyRoleArn
      TaskRoleArn:
        Fn::ImportValue:
          !Sub ${SecurityStackName}-FargateReadonlyRoleArn
      Tags:
        - Key: Service
          Value: Medical Peek
        - Key: Provider
          Value: Callahan William
        - Key: Name
          Value: !Sub ${AWS::StackName}-ecs-cd

  MedicalPeekLoabBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${AWS::StackName}-elb-sg
      GroupDescription: Seciruty Group for the Medical Peek Elastic Load Balancer
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: '0.0.0.0/0'
      VpcId:
        Fn::ImportValue:
          !Sub ${NetworkStackName}-Vpc
      Tags:
        - Key: Service
          Value: Medical Peek
        - Key: Provider
          Value: Callahan William
        - Key: Name
          Value: !Sub ${AWS::StackName}-elb-sg

  MedicalPeekHostSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${AWS::StackName}-host-sg
      GroupDescription: Seciruty Group for the Medical Peek
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref MedicalPeekLoabBalancerSecurityGroup
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId: !Ref MedicalPeekLoabBalancerSecurityGroup
      VpcId:
        Fn::ImportValue:
          !Sub ${NetworkStackName}-Vpc
      Tags:
        - Key: Service
          Value: Medical Peek
        - Key: Provider
          Value: Callahan William
        - Key: Name
          Value: !Sub ${AWS::StackName}-host-sg

Outputs:
  MedicalPeekLoadBalancerDnsName:
    Description: Medical Peek Load Balancer Dns Name
    Value: !GetAtt MedicalPeekLoadBalancer.DNSName